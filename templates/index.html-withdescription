<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HAProxy Configuration Form</title>
    <style>
        body {
            background-color: #ffffff; /* White background */
            color: #333;
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            position: relative;
        }
        .container {
            max-width: 600px;
            margin: 50px auto;
            padding: 20px;
            background-color: rgba(0, 0, 0, 0.7);
            border-radius: 10px;
            position: relative;
        }
        h2 {
            color: #fff;
            text-align: center;
        }
        label {
            display: block;
            margin-bottom: 5px;
            color: #fff;
        }
        input[type="text"], input[type="password"], select {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }
        input[type="file"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }
        input[type="submit"] {
            width: 100%;
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }
        input[type="submit"]:hover {
            background-color: #45a049;
        }
        .logo {
            position: absolute;
            top: 10px;
            left: 10px;
            width: 200px;
            height: auto;
            z-index: 10;
        }
        .backend-servers {
            margin-top: 20px;
        }
        .server-input {
            margin-bottom: 10px;
        }
        .description-box {
            margin-top: 20px;
            padding: 10px;
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
    </style>
    <script>
        function updateBackendServers() {
            const numServers = document.getElementById('numServers').value;
            const container = document.getElementById('backend-servers-container');
            container.innerHTML = ''; // Clear previous inputs

            for (let i = 1; i <= numServers; i++) {
                container.innerHTML += `
                    <div class="server-input">
                        <label for="backend${i}_ip">Backend ${i} IP:</label>
                        <input type="text" id="backend${i}_ip" name="backend${i}_ip" required>
                        <label for="backend${i}_port">Backend ${i} Port:</label>
                        <input type="text" id="backend${i}_port" name="backend${i}_port" required>
                    </div>
                `;
            }
        }

        // Function to dynamically display algorithm descriptions
        function showDescription() {
            var descriptionBox = document.getElementById("algorithm_description");
            var selectedAlgorithm = document.getElementById("load_balancing").value;

            var descriptions = {
                "roundrobin": "Round Robin – Requests are routed sequentially to each server in the pool until the cycle repeats itself. This method works well for servers with equal capacity but does not consider server load.",
                "leastconn": "Least Connections – Requests are routed to the server with the fewest active connections, helping to balance the load when connection durations vary greatly.",
                "leastresponse": "Least Response Time – Requests are routed to servers with the shortest response times, optimizing for performance and load distribution.",
                "first": "First – Requests are routed to the first available server with open slots. This method is useful when server capacities are known and fixed."
            };

            // Update the description text based on the selected algorithm
            descriptionBox.innerHTML = `<h3>${selectedAlgorithm.charAt(0).toUpperCase() + selectedAlgorithm.slice(1).replace(/([a-z])([A-Z])/g, '$1 $2')}</h3><p>${descriptions[selectedAlgorithm]}</p>`;
        }

        // Trigger description update on page load based on default selection
        window.onload = function() {
            showDescription();
        };

        // Update description on dropdown change
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('load_balancing').addEventListener('change', showDescription);
        });
    </script>
</head>
<body>
    <img src="vmxlogo.jpg" alt="VMX Logo" class="logo">
    <div class="container">
        <h2>HAProxy Configuration Form</h2>
        <form action="/" method="post" enctype="multipart/form-data">
            <label for="numServers">Number of Backend Servers:</label>
            <input type="text" id="numServers" name="numServers" required oninput="updateBackendServers()">

            <label for="frontend_port">Frontend Port:</label>
            <input type="text" id="frontend_port" name="frontend_port" required>

            <label for="load_balancing">Select Load Balancing Algorithm:</label>
            <select id="load_balancing" name="load_balancing" required>
                <option value="roundrobin">Round Robin</option>
                <option value="leastconn">Least Connections</option>
                <option value="leastresponse">Least Response Time</option>
                <option value="first">First</option>
            </select>

            <!-- Description box for selected algorithm -->
            <div id="algorithm_description" class="description-box"></div>

            <label for="username">HAProxy Stats Username:</label>
            <input type="text" id="username" name="username" required>

            <label for="password">HAProxy Stats Password:</label>
            <input type="password" id="password" name="password" required>

            <label for="ssl_pem">Upload SSL PEM File (optional):</label>
            <input type="file" id="ssl_pem" name="ssl_pem" accept=".pem">

            <div id="backend-servers-container" class="backend-servers">
                <!-- Backend server inputs will be added here dynamically -->
            </div>

            <input type="submit" value="Submit">
        </form>
    </div>
</body>
</html>

